###############################################################################
#
#  MIME media types and programs that process those types
#
#  Much of this file is generated automatically by the program "update-mime".
#  Please see the "update-mime" man page for more information.
#
#  Users can add their own rules if they wish by creating a ".mailcap"
#  file in their home directory.  Entries included there will take
#  precedence over those listed here.
#
###############################################################################


###############################################################################
#
#  User section follows:  Any entries included in this section will take
#  precedence over those created by "update-mime".  DO NOT CHANGE the
#  "User Section Begins" and "User Section Ends" lines, or anything outside
#  of this section!
#

# ----- User Section Begins ----- #
# -----  User Section Ends  ----- #

###############################################################################

text/plain; less '%s'; needsterminal
application/x-troff-man; /usr/bin/man -X100 -l '%s'; test=test -n "$DISPLAY" -a -e /usr/bin/gxditview; description=Man page
text/troff; /usr/bin/man -X100 -l '%s'; test=test -n "$DISPLAY" -a -e /usr/bin/gxditview; description=Man page
application/x-troff-man; /usr/bin/man -l '%s'; needsterminal; description=Man page
text/troff; /usr/bin/man -l '%s'; needsterminal; description=Man page
text/html; /usr/bin/sensible-browser %s; description=HTML Text; nametemplate=%s.html
application/x-troff-man; /usr/bin/nroff -mandoc -Tutf8; copiousoutput; print=/usr/bin/nroff -mandoc -Tutf8 | print text/plain:-
application/x-info; /usr/bin/info -f '%s'; needsterminal; description=GNU Info document
text/plain; more %s; needsterminal
text/html; chromium-browser --temp-profile %s; test=test -n "$DISPLAY"
text/xml; chromium-browser --temp-profile %s; test=test -n "$DISPLAY"
application/xhtml_xml; chromium-browser --temp-profile %s; test=test -n "$DISPLAY"
x-scheme-handler/http; chromium-browser --temp-profile %s; test=test -n "$DISPLAY"
x-scheme-handler/https; chromium-browser --temp-profile %s; test=test -n "$DISPLAY"
application/pkcs12; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs12+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs7-mime; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs7-mime+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs8; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs8+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkix-cert; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkix-cert+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkix-crl; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkix-crl+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-pem-file; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-pem-key; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-pkcs12; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-pkcs7-certificates; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-x509-ca-cert; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-x509-user-cert; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs10; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/pkcs10+pem; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-spkac; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
application/x-spkac+base64; /usr/bin/gcr-viewer %s; test=test -n "$DISPLAY"
image/bmp; lximage-qt %s; test=test -n "$DISPLAY"
image/gif; lximage-qt %s; test=test -n "$DISPLAY"
image/jpeg; lximage-qt %s; test=test -n "$DISPLAY"
image/jpg; lximage-qt %s; test=test -n "$DISPLAY"
image/png; lximage-qt %s; test=test -n "$DISPLAY"
image/tiff; lximage-qt %s; test=test -n "$DISPLAY"
image/x-bmp; lximage-qt %s; test=test -n "$DISPLAY"
image/x-pcx; lximage-qt %s; test=test -n "$DISPLAY"
image/x-tga; lximage-qt %s; test=test -n "$DISPLAY"
image/x-portable-pixmap; lximage-qt %s; test=test -n "$DISPLAY"
image/x-portable-bitmap; lximage-qt %s; test=test -n "$DISPLAY"
image/x-targa; lximage-qt %s; test=test -n "$DISPLAY"
image/x-portable-greymap; lximage-qt %s; test=test -n "$DISPLAY"
application/pcx; lximage-qt %s; test=test -n "$DISPLAY"
image/svg+xml; lximage-qt %s; test=test -n "$DISPLAY"
image/svg-xml; lximage-qt %s; test=test -n "$DISPLAY"
application/x-desktop; lxshortcut -i %s; test=test -n "$DISPLAY"
application/x-openbox-theme; obconf %s; test=test -n "$DISPLAY"
inode/directory; pcmanfm-qt %s; test=test -n "$DISPLAY"
text/html; qupzilla --private-browsing %s; test=test -n "$DISPLAY"
application/xhtml+xml; qupzilla --private-browsing %s; test=test -n "$DISPLAY"
x-scheme-handler/http; qupzilla --private-browsing %s; test=test -n "$DISPLAY"
x-scheme-handler/https; qupzilla --private-browsing %s; test=test -n "$DISPLAY"
x-scheme-handler/ftp; qupzilla --private-browsing %s; test=test -n "$DISPLAY"
application/x-mimearchive; qupzilla --private-browsing %s; test=test -n "$DISPLAY"
text/plain; vim %s; needsterminal
text/plain; view %s; edit=vim %s; compose=vim %s; test=test -x /usr/bin/vim; needsterminal
text/plain; view %s; edit=vi %s; compose=vi %s; needsterminal
application/x-troff-man; /usr/bin/man -Tascii -l '%s' | col -b; copiousoutput; description=Man page
text/troff; /usr/bin/man -Tascii -l '%s' | col -b; copiousoutput; description=Man page
text/*; less '%s'; needsterminal
text/*; view %s; edit=vim %s; compose=vim %s; test=test -x /usr/bin/vim; needsterminal
application/x-info; /usr/bin/info --subnodes -o /dev/stdout -f '%s' 2>/dev/null; copiousoutput; description=GNU Info document
application/x-tar; /bin/tar tvf '%s'; print=/bin/tar tvf - | print text/plain:-; copiousoutput
application/x-gtar; /bin/tar tvf '%s'; print=/bin/tar tvf - | print text/plain:-; copiousoutput
application/x-ustar; /bin/tar tvf '%s'; print=/bin/tar tvf - | print text/plain:-; copiousoutput
text/*; more %s; needsterminal
text/*; view %s; edit=vi %s; compose=vi %s; needsterminal
application/vnd.debian.binary-package; /usr/lib/mime/debian-view %s; needsterminal; description=Debian GNU/Linux Package; nametemplate=%s.deb
